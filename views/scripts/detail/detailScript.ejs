<script>
    $(document).ready(() => {
        init();


    })
    // table custom fixed thead
    var tableCont = document.querySelector('#table-cont')
    /**
     * scroll handle
     * @param {event} e -- scroll event
     */
    function scrollHandle(e) {
        var scrollTop = this.scrollTop;
        this.querySelector('thead').style.transform = 'translateY(' + scrollTop + 'px)';
    }

    tableCont.addEventListener('scroll', scrollHandle)

    // table custom fixed thead
    var tableCont_employee = document.querySelector('#table-cont-employee')
    /**
     * scroll handle
     * @param {event} e -- scroll event
     */
    function scrollHandle(e) {
        var scrollTop = this.scrollTop;
        this.querySelector('thead').style.transform = 'translateY(' + scrollTop + 'px)';
    }

    tableCont_employee.addEventListener('scroll', scrollHandle)

    var win = navigator.platform.indexOf('Win') > -1;
    if (win && document.querySelector('#sidenav-scrollbar')) {
        var options = {
            damping: '0.5'
        }
        Scrollbar.init(document.querySelector('#sidenav-scrollbar'), options);
    }

    get_name_employee = (id) => {
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_name_employee/" + id,
            type: "GET",
        }).done((employee) => {
            $("#id_employee_tracking").text(employee[0].ID);
            $("#employee_name_tracking").text(employee[0].NAME);
            $("#shift_employee_tracking").text(employee[0].SHIFT);
            $("#operation_employee_tracking").text(employee[0].OPERATION_NAME);
        }).fail((e) => {
            console.error(e);
        })
    }

    $(document).keypress((event) => {
        var keycode = event.keyCode || event.which;
        if (keycode == '13') {
            search_employee_of_technician();
        }
    });

    // nhận name của kĩ thuật
    get_name_tech = () => {
        $("#tech_name_search").text('')
        let tech_id = $("#technician_id_search").val();
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_name_technician/" + tech_id,
            type: "GET",
        }).done((tech) => {
            console.log(tech)
            $("#tech_name_search").text(tech[0].TECHNICIAN)
        }).fail((e) => {
            console.error(e);
        })
    }

    // // nhận lỗi của employee bằng ID. Tất cả.
    // get_irr_of_employee_profile = (id) => {
    //     let irr_list = [];
    //     $.ajax({
    //         headers: {
    //             'Accept': 'application/json',
    //             'Content-Type': 'application/json'
    //         },
    //         url: "/api/amt/get_irr_of_employee_profile/" + id,
    //         type: "GET",
    //     }).done((list) => {
    //         result_func(list);
    //     }).fail((e) => {
    //         console.error(e);
    //     })
    // }

    // nhận tên của kỹ thuật
    get_name_tech_new = () => {
        let id = $("#tech_id_new").val();
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_new_tech_name/" + id,
            type: "GET",
        }).done((tech) => {
            $("#tech_name_new").val(tech[0].NAME);
        }).fail((e) => {
            console.error(e);
        })
    }


    var employee_profile_chart = Object;
    search_employee_of_technician = () => {
        let id_tech_and_day_tracking = {
            TECH_ID: $("#technician_id_search").val(),
            DAY_TRACKING: $("#day_tracking").val(),
        }

        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_employee_detail_by_tech_id",
            type: "POST",
            data: JSON.stringify(id_tech_and_day_tracking)
        }).done((employee_list) => {
            if (employee_list.status == 201) {
                $("#technician_id_search").val('');
                $("#employee_profile_tab tbody").empty();
                $.each(employee_list.employee_profile_list, (index, item) => {
                    $("#employee_profile_tab tbody").append(
                        `
                    <tr ondblclick = "see_employee_detail(${item.ID})">
                        <td>${item.ID}</td>
                        <td>${item.NAME}</td>
                        <td>${item.OPERATION_NAME}</td>
                        <td>${item.EFF}</td>
                        <td>${item.TAGETS}</td>
                        <td>${Math.floor(((item.WORK_HRS - item.SPAN_TIME - item.DOWTIME) / item.WORK_HRS) * 100)} %</td>
                        <td style="color:${item.EFF > item.TAGETS ? '#43A047' : '#EC407A'};">${item.EFF > item.TAGETS ? 'ĐẠT' : 'KHÔNG'}</td>
                        <td><button onclick = "why_not_pass(${item.ID})" class = "btn btn-outline-primary">ghi chú<butotn></td>
                        <td><button onclick = "technician_handle(${item.ID})" class = "btn btn-outline-success">Đổi KT<butotn></td>
                    </tr>
                    `
                    )
                });
            } else if (employee_list.status == 200) {
                console.log(employee_list.employee_profile);
                $("#technician_id_search").val('');
                $("#daily_employee_profile tbody").empty();
                $("#employee_profile_show").modal('show');
                $("#id_employee_profile").text(employee_list.employee_profile[0].ID);
                $("#name_employee_profile").text(employee_list.employee_profile[0].NAME);
                $("#shift_employee_profile").text(employee_list.employee_profile[0].SHIFT);
                $("#operation_employee_profile").text(employee_list.employee_profile[0].OPERATION_NAME);
                $("#id_tech_employee_profile").text(employee_list.employee_profile[0].TECH_ID);
                $("#name_tech_employee_profile").text(employee_list.employee_profile[0].TECHNICIANS);
                let data_tagets = [];
                let data_EFF = [];
                let labels_date = [];
                $.each(employee_list.employee_profile, (index, item) => {
                    data_EFF.push(item.EFF);
                    data_tagets.push(item.TAGETS);
                    labels_date.push(item.DAY_TRACKING);
                    $("#daily_employee_profile tbody").append(
                        `
                        <tr>
                            <td>${item.DAY_TRACKING}</td>
                            <td>${item.OPERATION_NAME}</td>
                            <td>${item.EFF}</td>
                            <td>${item.TAGETS}</td>
                            <td>${item.REASON}</td>
                            <td>${item.TECHNICIANS_NOTE}</td>
                        </tr>
                        `
                    )
                })
                var eff_chart_employee_profile = document.getElementById("employee_chart_detail").getContext('2d');

                Chart.defaults.global.defaultFontFamily = "Lato";
                Chart.defaults.global.defaultFontSize = 18;

                var dataFirst = {
                    label: "Đường cong",
                    data: data_tagets,
                    lineTension: 0,
                    fill: false,
                    borderColor: 'red'
                };

                var dataSecond = {
                    label: "Hiệu suất",
                    data: data_EFF,
                    lineTension: 0,
                    fill: false,
                    borderColor: 'blue'
                };

                var training_data = {
                    labels: labels_date,
                    datasets: [dataFirst, dataSecond]
                };

                var chartOptions = {
                    legend: {
                        display: true,
                        position: 'top',
                        labels: {
                            boxWidth: 30,
                            fontColor: 'black'
                        }
                    }
                };

                employee_profile_chart = new Chart(eff_chart_employee_profile, {
                    type: 'line',
                    data: training_data,
                    options: chartOptions
                });
            } else {
                Swal.fire({
                    position: 'top-end',
                    icon: 'warning',
                    title: 'ID không tồn tại',
                    showConfirmButton: false,
                    timer: 1500
                })
                $("#technician_id_search").show().focus();
            }


        }).fail((e) => {
            console.error(e)
        })

    }

    // hủy hiển thị employee profile
    cancel_employee_profile = () => {
        employee_profile_chart.destroy();
        $("#employee_profile_show").modal('hide');
    }

    // hiển thị modal employee profile
    show_profile_employee = (id) => {
        $("#show_eff_detail").modal('hide');
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_em_profile/" + id,
            type: "GET",
        }).done((employee_list) => {
            $("#technician_id_search").val('');
            $("#daily_employee_profile tbody").empty();
            $("#employee_profile_show").modal('show');
            $("#id_employee_profile").text(employee_list.employee_profile[0].ID);
            $("#name_employee_profile").text(employee_list.employee_profile[0].NAME);
            $("#shift_employee_profile").text(employee_list.employee_profile[0].SHIFT);
            $("#operation_employee_profile").text(employee_list.employee_profile[0].OPERATION_NAME);
            $("#id_tech_employee_profile").text(employee_list.employee_profile[0].TECH_ID);
            $("#name_tech_employee_profile").text(employee_list.employee_profile[0].TECHNICIANS);
            let data_tagets = [];
            let data_EFF = [];
            let labels_date = [];
            $.each(employee_list.employee_profile, (index, item) => {
                data_EFF.push(item.EFF);
                data_tagets.push(item.TAGETS);
                labels_date.push(item.DAY_TRACKING);
                $("#daily_employee_profile tbody").append(
                    `
                        <tr>
                            <td>${item.DAY_TRACKING}</td>
                            <td>${item.OPERATION_NAME}</td>
                            <td>${item.EFF}</td>
                            <td>${item.TAGETS}</td>
                            <td>${item.REASON}</td>
                            <td>${item.TECHNICIANS_NOTE}</td>
                        </tr>
                        `
                )
            })
            var eff_chart_employee_profile = document.getElementById("employee_chart_detail").getContext('2d');

            Chart.defaults.global.defaultFontFamily = "Lato";
            Chart.defaults.global.defaultFontSize = 18;

            var dataFirst = {
                label: "Đường cong",
                data: data_tagets,
                lineTension: 0,
                fill: false,
                borderColor: 'red'
            };

            var dataSecond = {
                label: "Hiệu suất",
                data: data_EFF,
                lineTension: 0,
                fill: false,
                borderColor: 'blue'
            };

            var training_data = {
                labels: labels_date,
                datasets: [dataFirst, dataSecond]
            };

            var chartOptions = {
                legend: {
                    display: true,
                    position: 'top',
                    labels: {
                        boxWidth: 30,
                        fontColor: 'black'
                    }
                }
            };

            employee_profile_chart = new Chart(eff_chart_employee_profile, {
                type: 'line',
                data: training_data,
                options: chartOptions
            });
        }).fail((e) => {
            console.error(e);
        })
    }

    // hiển thị chi tiết EFF
    show_eff_detail = (id) => {
        $("#btn_show_profile").empty();
        $("#eff_detail_show tbody").empty();
        let employee = {
            ID: id,
            DAY_TRACKING: $("#day_tracking").val(),
        }

        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_eff_detail",
            type: "POST",
            data: JSON.stringify(employee)
        }).done((eff_list) => {
            console.log(eff_list)
            $("#show_eff_detail").modal('show');
            $("#btn_show_profile").append(
                `
                <button type="button" class="btn btn-success" onclick="show_profile_employee(${eff_list[0].ID})">Xem Profile</button>
                `
            )
            $.each(eff_list, (index, item) => {
                $("#eff_detail_show tbody").append(
                    `
                    <tr>
                        <td>${item.DAY_TRACKING}</td>
                        <td>${item.EFF}</td>
                        <td>${item.TAGETS}</td>
                        <td>${Math.floor(((item.WORK_HRS - item.SPAN_TIME - item.DOWTIME) / item.WORK_HRS) * 100)} %</td>
                        <td style="color:${item.EFF > item.TAGETS ? '#43A047' : '#EC407A'};">${item.EFF > item.TAGETS ? 'ĐẠT' : 'KHÔNG ĐẠT'}</td>
                    </tr>
                    `
                )
            })
        }).fail((e) => {
            console.error(e);
        })
    }

    var eff_chart = Object;
    get_data_eff_training = (id) => {
        $("#btn_show_detail_eff").empty();
        $("#btn_show_detail_eff").append(`<button onclick = "show_eff_detail(${id})" class="btn btn-danger">Chi tiết</button>`)
        let employee = {
            ID: id,
            DAY_TRACKING: $("#day_tracking").val(),
        }
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_data_eff_training/",
            type: "POST",
            data: JSON.stringify(employee)
        }).done((arrData) => {
            console.log(arrData.length);
            $("#day_number_eff").text(`${arrData.length} ngày gần nhất`);
            let labels_date = [];
            let data_EFF = [];
            let data_tagets = [];
            let percent_eff = 0;
            let total_eff = 0;
            let total_tagets = 0;
            $.each(arrData, (index, item) => {
                total_eff += parseInt(item.EFF);
                total_tagets += parseInt(item.TAGETS);
                labels_date.push(item.DAY_TRACKING);
                data_EFF.push(item.EFF);
                data_tagets.push(item.TAGETS);
            })
            percent_eff = Math.floor((total_eff / total_tagets) * 100)
            $("#percent_eff").text(percent_eff);
            var eff = document.getElementById("chart-bars").getContext('2d');

            Chart.defaults.global.defaultFontFamily = "Lato";
            Chart.defaults.global.defaultFontSize = 18;

            var dataFirst = {
                label: "Đường cong",
                data: data_tagets,
                lineTension: 0,
                fill: false,
                borderColor: 'red'
            };

            var dataSecond = {
                label: "Hiệu suất",
                data: data_EFF,
                lineTension: 0,
                fill: false,
                borderColor: 'blue'
            };

            var training_data = {
                labels: labels_date,
                datasets: [dataFirst, dataSecond]
            };

            var chartOptions = {
                legend: {
                    display: true,
                    position: 'top',
                    labels: {
                        boxWidth: 30,
                        fontColor: 'black'
                    }
                }
            };

            eff_chart = new Chart(eff, {
                type: 'line',
                data: training_data,
                options: chartOptions
            });
        }).fail((e) => {
            console.error(e);
        })
    }

    // nhận danh sách lỗi của employee ID sau đó hiển thị chart
    var irr_chart_tracking = Object;
    get_data_irr_training = (id) => {
        $("#btn_show_detail_irr").empty();
        $("#btn_show_detail_irr").append(`<button onclick = "show_irr_detail(${id})" class="btn btn-danger">Chi tiết</button>`)
        let employee = {
            ID: id,
            DAY_TRACKING: $("#day_tracking").val(),
        }
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_data_irr_training/",
            type: "POST",
            data: JSON.stringify(employee)
        }).done((irr_data) => {
            $("#day_number_irr").text(`${irr_data.length} ngày gần nhất`);
            let label_data = [];
            let data_irr = [];
            $.each(irr_data, (index, item) => {
                label_data.push(item.DATE);
                data_irr.push(item.QUANTITY)
            })
            var irr_chart = document.getElementById("chart-line").getContext("2d");
            irr_chart_tracking = new Chart(irr_chart, {
                type: "line",
                data: {
                    labels: label_data,
                    datasets: [{
                        label: "Lỗi",
                        tension: 0,
                        borderWidth: 0,
                        pointRadius: 5,
                        pointBackgroundColor: "rgba(255, 255, 255, .8)",
                        pointBorderColor: "transparent",
                        borderColor: "rgba(255, 255, 255, .8)",
                        borderColor: "rgba(255, 255, 255, .8)",
                        borderWidth: 4,
                        backgroundColor: "transparent",
                        fill: true,
                        data: data_irr,
                        maxBarThickness: 6

                    }],
                },
                options: {
                    responsive: true,
                    maintainAspectRatio: false,
                    plugins: {
                        legend: {
                            display: false,
                        }
                    },
                    interaction: {
                        intersect: false,
                        mode: 'index',
                    },
                    scales: {
                        y: {
                            grid: {
                                drawBorder: false,
                                display: true,
                                drawOnChartArea: true,
                                drawTicks: false,
                                borderDash: [5, 5],
                                color: 'rgba(255, 255, 255, .2)'
                            },
                            ticks: {
                                display: true,
                                color: '#f8f9fa',
                                padding: 10,
                                font: {
                                    size: 14,
                                    weight: 300,
                                    family: "Roboto",
                                    style: 'normal',
                                    lineHeight: 1
                                },
                            }
                        },
                        x: {
                            grid: {
                                drawBorder: false,
                                display: false,
                                drawOnChartArea: false,
                                drawTicks: false,
                                borderDash: [5, 5]
                            },
                            ticks: {
                                display: true,
                                color: '#f8f9fa',
                                padding: 10,
                                font: {
                                    size: 14,
                                    weight: 300,
                                    family: "Roboto",
                                    style: 'normal',
                                    lineHeight: 1
                                },
                            }
                        },
                    },
                },
            });
        }).fail((e) => {
            console.error(e);
        })
    }

    // hiển thị modal danh sách lỗi của ID
    show_irr_detail = (id) => {
        $("#irr_detail_show tbody").empty();
        let employee = {
            ID: id,
            DAY_TRACKING: $("#day_tracking").val(),
        }
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_irr_detail",
            type: "POST",
            data: JSON.stringify(employee)
        }).done((irr_list) => {
            $("#show_irr_detail").modal('show');
            $.each(irr_list, (index, item) => {
                $("#irr_detail_show tbody").append(
                    `
                        <tr>
                            <td>${item.DATE}</td>
                            <td>${item.IRR_NAME}</td>
                            <td>${item.QUANTITY}</td>
                        </tr>
                    `
                )
            })

        }).fail((e) => {
            console.error(e);
        })
    }




    // get reason then display chart
    var reason_detail = Object;
    get_season = async (id) => {
        $("#btn_show_detail_reason").empty();
        $("#btn_show_detail_reason").append(`<button onclick = "show_reason_detail(${id})" class="btn btn-danger">Chi tiết</button>`)
        let employee = {
            ID: id,
            DAY_TRACKING: $("#day_tracking").val(),
        }
        await $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_reason",
            type: "POST",
            data: JSON.stringify(employee)
        }).done((reason_data) => {
            console.log(reason_data);
            var labels_reason = [''];
            var data_reason = [0];
            $.each(reason_data, (index, item) => {
                labels_reason.push(item.REASON);
                data_reason.push(item.QUANTITY);
            })
            console.log(labels_reason);
            console.log(data_reason);
            var ctx3 = document.getElementById("chart-line-tasks").getContext("2d");
            reason_detail = new Chart(ctx3, {
                type: 'bar',
                data: {
                    labels: labels_reason,
                    datasets: [
                        {
                            label: "SL",
                            backgroundColor: ["#3e95cd", "#8e5ea2", "#3cba9f", "#e8c3b9", "#c45850", "red", 'blue'],
                            data: data_reason
                        }
                    ]
                },
                options: {
                    legend: { display: false },
                    title: {
                        display: true,
                        text: 'Lý do không đạt'
                    }
                }
            });
        }).fail((e) => {
            console.error(e)
        })
    }

    // hiển thị danh sách reason modal
    show_reason_detail = (id) => {
        $("#reason_detail_show tbody").empty();
        let employee = {
            ID: id,
            DAY_TRACKING: $("#day_tracking").val(),
        }
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_reason_detail",
            type: "POST",
            data: JSON.stringify(employee)
        }).done((reasons) => {
            $("#show_reason_detail").modal('show');
            $.each(reasons, (index, item) => {
                $("#reason_detail_show tbody").append(
                    `
                        <tr>
                            <td>${item.DAY_TRACKING}</td>
                            <td>${item.REASON}</td>
                            <td>${item.TECHNICIANS_NOTE}</td>
                        </tr>
                        `
                )
            })
        }).fail((e) => {
            console.error(e);
        })
    }







    // hàm khỏi đầu 
    init = () => {
        get_start_date_list();
        load_time();
    }
    // theo dõi chi tiết employee
    see_employee_detail = (id) => {
        $("#chart_views_employee").show();
        get_data_eff_training(id);
        get_data_irr_training(id);
        get_name_employee(id);
        get_season(id);
    }
    // ẩn chart theo dõi > hủy
    none_chart = () => {
        $("#chart_views_employee").hide();
        destroy_reason(reason_detail);
        destroy_eff(eff_chart);
        destroy_irr(irr_chart_tracking);
    }
    // hủy chart eff
    destroy_eff = (eff) => {
        eff.destroy();
    }
    // hủy chart irr
    destroy_irr = (irr) => {
        irr.destroy();
    }
    // hủy chart percent
    destroy_reason = (percent) => {
        percent.destroy();
    }





    // nhận số lượng lỗi
    get_irr_by_day_tracking = (group_line, day_tracking) => {
        $("#top_irr_0").text('');
        $("#top_irr_number_0").text('');
        $("#top_irr_1").text('');
        $("#top_irr_number_1").text('');
        $("#top_irr_1").text('');
        $("#top_irr_number_2").text('');
        $("#top_irr_1").text('');
        $("#top_irr_number_2").text('');
        $("#top_irr_2").text('');
        $("#top_irr_number_3").text('');
        $("#top_irr_3").text('');
        $("#top_irr_number_3").text('');
        $("#top_irr_4").text('');
        $("#top_irr_number_4").text('');
        $("#top_irr_5").text('');
        $("#top_irr_number_5").text('');
        $("#top_irr_6").text('');
        $("#top_irr_number_6").text('');
        $("#top_irr_7").text('');
        $("#top_irr_number_7").text('');
        $("#top_irr_8").text('');
        $("#top_irr_number_8").text('');
        let data = {
            GROUP_LINE: group_line,
            DAY_TRACKING: day_tracking,
            SHIFT: $("#shift_list").val(),
        }
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_irr_by_day_tracking",
            type: "post",
            data: JSON.stringify(data)
        }).done((irr_list) => {
            let total = 0;
            irr_list.sort(function (a, b) {
                return b.QUANTITY - a.QUANTITY
            })
            console.log(irr_list);
            $.each(irr_list, (index, item) => {
                $("#top_irr_" + index).text(item.IRR_NAME);
                $("#top_irr_number_" + index).text(item.QUANTITY);
            })
            $.each(irr_list, (index, item) => {
                total += parseInt(item.QUANTITY);
            })
            $("#total_irr").text(total);
        }).fail((e) => {
            console.error(e);
        })
    }

    // nhận thông tin chi tiết qua ngày bắt đầu
    get_info_employee_by_group_line = () => {
        $("#employee_profile_tab tbody").empty();
        // none_chart();
        let day_tracking = {
            GROUP_LINE: $("#group_line_list").val(),
            DAY_TRACKING: $("#day_tracking").val(),
            SHIFT: $("#shift_list").val(),
        }
        get_irr_by_day_tracking(day_tracking.GROUP_LINE, day_tracking.DAY_TRACKING);
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_info_employee_by_group_line",
            type: "post",
            data: JSON.stringify(day_tracking)
        }).done((employee_profile) => {
            console.log(employee_profile);
            $("#total_employee").text(employee_profile.length);
            let eff_total = 0;
            let tagets_total = 0;
            let eff_percent = 0;
            let pass = 0;
            let not_pass = 0;
            $.each(employee_profile, (index, item) => {
                console.log(item.EFF, item.TAGETS);
                if (item.EFF != null && item.TAGETS != null) {
                    eff_total += parseInt(item.EFF);
                    tagets_total += parseInt(item.TAGETS);
                }
                if (item.EFF > item.TAGETS) {
                    pass++
                } else {
                    not_pass++
                }
                $("#employee_profile_tab tbody").append(
                    `
                    <tr ondblclick = "see_employee_detail(${item.ID})">
                        <td>${item.ID}</td>
                        <td>${item.NAME}</td>
                        <td>${item.OPERATION_NAME}</td>
                        <td>${item.EFF}</td>
                        <td>${item.TAGETS}</td>
                        <td>${Math.floor(((item.WORK_HRS - item.SPAN_TIME - item.DOWTIME) / item.WORK_HRS) * 100)} %</td>
                        <td style="color:${item.EFF > item.TAGETS ? '#43A047' : '#EC407A'};">${item.EFF > item.TAGETS ? 'ĐẠT' : 'KHÔNG'}</td>
                        <td><button onclick = "why_not_pass(${item.ID})" class = "btn btn-outline-primary">ghi chú<butotn></td>
                        <td><button onclick = "technician_handle(${item.ID})" class = "btn btn-outline-success">Đổi KT<butotn></td>
                    </tr>
                    `
                )
            })
            let eff_medium = Math.floor(eff_total / employee_profile.length);
            $("#eff_medium").text(eff_medium + ' %');
            let tagets_medium = Math.floor(tagets_total / employee_profile.length);
            $("#tagets_medium").text(tagets_medium + ' %');
            percent_eff = Math.floor((eff_total / tagets_total) * 100);
            $("#pass").text(pass);
            $("#not_pass").text(not_pass);
            $("#percent_eff_pass").text(Math.floor((pass / (pass + not_pass)) * 100) + ' %')
        }).fail((e) => {
            console.error(e);
        })
    }

    // thêm kỹ thuật thứ 2
    add_tech_second = () => {
        let employee_add = {
            ID: $("#id_employee").val(),
            TECH_ID_SECOND: $("#tech_id_new").val(),
            TECH_NAME_SECOND: $("#tech_name_new").val()
        }

        if (employee_add.TECH_ID_SECOND == '') {
            $.notify('vui lòng chọn kỹ thuật', 'info');
            return;
        }
        Swal.fire({
            title: 'Bạn có muốn thêm kỹ thuật này vào không?',
            showDenyButton: true,
            confirmButtonText: 'Lưu',
            denyButtonText: `Hủy`,
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {

                $.ajax({
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    url: "/api/amt/add_tech_second",
                    type: "POST",
                    data: JSON.stringify(employee_add)
                }).done((reqText) => {
                    if (reqText.status == 200) {
                        Swal.fire('đã lưu!', '', 'success');
                        $("#handle_technician").modal('hide');
                    } else {
                        Swal.fire('lỗi rồi!', '', 'error')
                    }
                }).fail((e) => {
                    console.error(e);
                })

            } else if (result.isDenied) {
                Swal.fire('Chưa được lưu', '', 'info')
            }
        })
    }

      // thay đổi kỹ thuật.
      change_tech = () => {
        let employee_add = {
            ID: $("#id_employee").val(),
            TECH_ID: $("#tech_id_new").val(),
            TECHNICIAN: $("#tech_name_new").val()
        }

        if (employee_add.TECH_ID == '') {
            $.notify('vui lòng chọn kỹ thuật', 'info');
            return;
        }
        Swal.fire({
            title: 'Bạn có muốn thay đổi kỹ thuật này vào không?',
            showDenyButton: true,
            confirmButtonText: 'Lưu',
            denyButtonText: `Hủy`,
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                $.ajax({
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    url: "/api/amt/change_tech",
                    type: "POST",
                    data: JSON.stringify(employee_add)
                }).done((reqText) => {
                    if (reqText.status == 200) {
                        $.notify("lưu thành công", "success")
                        $("#handle_technician").modal('hide');
                    } else {
                        $.notify("lưu thất bại", "error")

                    }
                }).fail((e) => {
                    console.error(e);
                })

            } else if (result.isDenied) {
                Swal.fire('Chưa được lưu', '', 'info')
            }
        })
    }


    // thay đổi, thêm kỹ thuật 2
    technician_handle = (id) => {
        $("#tech_id_new").val('');
        $("#tech_name_new").val('');
        $("#handle_technician").modal('show');
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_tech_of_employee/" + id,
            type: "GET",
        }).done((employee) => {
            $("#id_employee").val(employee[0].ID);
            $("#name_employee").val(employee[0].NAME);
            $("#id_tech_of_employee").val(employee[0].TECH_ID);
            $("#name_tech_of_employee").val(employee[0].TECHNICIAN);

        }).fail((e) => {
            console.error(e);
        })
    }

    // show modal để kỹ thuật thêm lý do không đạt trong ngày
    why_not_pass = (id) => {
        let find = {
            ID: id,
            DAY_TRACKING: $("#day_tracking").val(),
        }
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_employee_id_and_name",
            type: "POST",
            data: JSON.stringify(find)
        }).done((employee) => {
            console.log(employee)
            $("#id_of_employee").val(employee[0].ID);
            $("#name_of_employee").val(employee[0].NAME);
            $("#code_training_of_employee").val(employee[0].CODE_TRAINING);
            $("#operation_of_employee").val(employee[0].OPERATION_NAME);
            $("#why_not_pass").modal('show');
        }).fail((e) => {
            console.error(e);
        })
    }

    // hàm hủy hiển thị modal.
    cancel = () => {
        $("#id_of_employee").val('');
        $("#technician_note").val('');
        $('#why_not_pass').modal('hide');
        $("#show_irr_detail").modal('hide');
        $("#show_reason_detail").modal('hide')
        $("#show_eff_detail").modal('hide')
        $("#employee_profile_show").modal('hide');
    }

    // hàm này dùng để lúc kĩ thuật chọn lý do. Nếu chọn Lý do khác thì sẽ 
    // tự động chạy hàm validate 
    // bắt buộc kỹ thuật phải nhập note
    change_reason = () => {
        let reason = $("#reason_not_pass").val();
        if (reason == 'Lý do khác') {
            //  validate form nhập lý do không đạt
            $("#note_season_not_pass").validate({
                ruler: {
                    season_not_pass: {
                        required: true,
                    },
                    technician_note: {
                        required: true,
                        minlength: 10,
                        maxlength: 255
                    }
                },
                messages: {
                    season_not_pass: {
                        required: 'Phải chọn lý do',
                    },
                    technician_note: {
                        required: 'Không được để trống',
                        minlength: 'Nhập ít nhất 10 ký tự',
                        maxlength: 'Nhập tối đa 255 ký tự'
                    }
                }
            });
        }
    }

    // lưu thông tin lý do không đạt
    save_reason_not_pass = () => {
        let reason = {
            ID: $("#id_of_employee").val(),
            REASON: $("#reason_not_pass").val(),
            CYCLE_TIME: $("#cycle_time").val(),
            DAY_TRACKING: $("#day_tracking").val(),
            TECHNICIANS_NOTE: $("#technician_note").val()
        }
        if (reason.REASON === 'Lý do khác' && (reason.TECHNICIANS_NOTE === '' || reason.TECHNICIANS_NOTE.length < 10)) {
            return;
        }
        Swal.fire({
            title: 'Bạn có muốn lưu thay đổi này không?',
            showCancelButton: true,
            confirmButtonText: 'Lưu',
        }).then((result) => {
            /* Read more about isConfirmed, isDenied below */
            if (result.isConfirmed) {
                $.ajax({
                    headers: {
                        'Accept': 'application/json',
                        'Content-Type': 'application/json'
                    },
                    url: "/api/amt/save_reason_not_pass",
                    type: "post",
                    data: JSON.stringify(reason)
                }).done((res) => {
                    if (res.status === '200') {
                        $.notify('lưu thành công', 'success')
                        $("#id_of_employee").val('');
                        $("#technician_note").val('');
                        $('#why_not_pass').modal('hide');
                    } else {
                        $.notify('lưu thất bại', 'error')
                    }
                }).fail((e) => {
                    console.error(e);
                })
            } else if (result.isDenied) {
                Swal.fire('Chưa được lưu', '', 'info')
            }
        })
    }

    // lấy danh sách nhân viên trong group_line ()
    get_start_date_list = () => {
        $.ajax({
            headers: {
                'Accept': 'application/json',
                'Content-Type': 'application/json'
            },
            url: "/api/amt/get_start_date_list",
            type: "get",
        }).done((data) => {
            let value = data[0].GROUP_LINE;
            $.each(data, (index, item) => {
                if (item.GROUP_LINE == value) {
                    $("#group_line_list").append(
                        `
                    <option value = "${item.GROUP_LINE}" selected>${item.GROUP_LINE}</option>
                    `
                    )
                } else {
                    $("#group_line_list").append(
                        `
                        <option value = "${item.GROUP_LINE}">${item.GROUP_LINE}</option>
                        `
                    )
                }

            })
            get_info_employee_by_group_line();
        }).fail((e) => {
            console.error(e);
        })
    }

    // format time
    format_time = (time) => {
        return (new Date(time)).toLocaleDateString('fr-CA');
    }


    function load_time() {
        let datenow = format_time(Date.now());

        var date = new Date(datenow);
        // let start_date = format_time(date1.setDate(date1.getDate() - 10));
        let day_get_data = format_time(date.setDate(date.getDate() - 2));
        $("#day_tracking").val(day_get_data);
    }

</script>